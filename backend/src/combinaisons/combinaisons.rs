use maplit::hashmap;
use std::collections::HashMap;

fn mix_color() -> HashMap<u8, HashMap<u8, u8>> {
    hashmap![
        0 => hashmap![1 => 3, 2 => 4, 6 => 8, 7 => 9, 15 => 17, 16 => 18, 28 => 30, 29 => 31, 45 => 47, 46 => 48],
        1 => hashmap![0 => 3, 2 => 5, 6 => 10, 7 => 11, 15 => 19, 16 => 20, 28 => 32, 29 => 33, 45 => 49, 46 => 50],
        2 => hashmap![0 => 4, 1 => 5, 6 => 12, 7 => 13, 15 => 21, 16 => 22, 28 => 34, 29 => 35, 45 => 51, 46 => 52],
        6 => hashmap![0 => 8, 1 => 10, 2 => 12, 7 => 14, 15 => 23, 16 => 24, 28 => 36, 29 => 37, 45 => 53, 46 => 54],
        7 => hashmap![0 => 9, 1 => 11, 2 => 13, 6 => 14, 15 => 25, 16 => 26, 28 => 38, 29 => 39, 45 => 55, 46 => 56],
        15 => hashmap![0 => 17, 1 => 17, 2 => 21, 6 => 23, 7 => 25, 16 => 27, 28 => 40, 29 => 41, 45 => 57, 46 => 58],
        16 => hashmap![0 => 18, 1 => 20, 2 => 22, 6 => 24, 7 => 26, 15 => 27, 28 => 42, 29 => 43, 45 => 59, 46 => 60],
        28 => hashmap![0 => 30, 1 => 30, 2 => 34, 6 => 36, 7 => 38, 15 => 40, 16 => 42, 29 => 44, 45 => 61, 46 => 62],
        29 => hashmap![0 => 31, 1 => 31, 2 => 35, 6 => 37, 7 => 39, 15 => 41, 16 => 43, 28 => 44, 45 => 63, 46 => 64],
        45 => hashmap![0 => 47, 1 => 49, 2 => 51, 6 => 53, 7 => 55, 15 => 57, 16 => 59, 28 => 61, 29 => 63, 46 => 65],
        46 => hashmap![0 => 48, 1 => 50, 2 => 52, 6 => 54, 7 => 56, 15 => 58, 16 => 60, 28 => 62, 29 => 64, 45 => 65],
        3 => hashmap![5 => 6, 14 => 15],
        4 => hashmap![5 => 7, 14 => 16],
        5 => hashmap![3 => 6, 4 => 7],
        14 => hashmap![3 => 15, 4 => 16],
        23 => hashmap![27 => 28],
        26 => hashmap![27 => 29],
        27 => hashmap![23 => 28, 26 => 29],
        40 => hashmap![44 => 45],
        43 => hashmap![44 => 46],
        44 => hashmap![40 => 45, 43 => 46]
    ]
}

pub fn color_mix(c1: &u64, c2: &u64) -> Option<u64> {
    match mix_color().get(&(*c1 as u8)) {
        Some(color_value_1) => {
            match color_value_1.get(&(*c2 as u8)) {
                Some(color_value_2) => Some(*color_value_2 as u64),
                None => None
            }
        },
        None => None
    } 
}
